{
	"info": {
		"_postman_id": "5027a672-d3f9-4a7f-8b66-d9683ac3c72e",
		"name": "group_23_HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" // Проверить, что в body приходит правильный string\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Спарсить response body в json\r",
							"var responseJson = pm.response.json()\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"var req = request.data\r",
							"pm.test(\"Your test name\", function () {\r",
							"  pm.expect(req.name).to.eql(\"Andrei\");\r",
							"});\r",
							"// Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Your test age\", function () {\r",
							"  pm.expect(req.age).to.eql(\"27\");\r",
							"});\r",
							"// Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Your test salary\", function () {\r",
							"  pm.expect(req.salary).to.eql(\"300\");\r",
							"});\r",
							"// Спарсить request.\r",
							"var req = request.data\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(responseJson.name).to.eql(req.name)\r",
							"});\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(responseJson.age).to.eql(req.age)\r",
							"});\r",
							"// Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary check\", function () {\r",
							"    pm.expect(+(responseJson.salary)).to.eql(+(req.salary))\r",
							"});\r",
							"// Вывести в консоль параметр family из response.\r",
							"console.log(responseJson.family)\r",
							"// Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test (\"Salary_1.5 check\", function () {\r",
							"    pm.expect(responseJson.family.u_salary_1_5_year).to.eql((+req.salary)*4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Andrei",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "300",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"var responseJson = pm.response.json()\r",
							"//Спарсить request\r",
							"var req = pm.request.url.query.toObject();\r",
							"//console.log(req)\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(responseJson.name).to.eql(req.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(responseJson.age).to.eql(req.age);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary check\", function () {\r",
							"    pm.expect(+responseJson.salary).to.eql(+req.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"//console.log(responseJson.family)\r",
							"console.log(responseJson.family)\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Dog have name\", function () {\r",
							"    pm.expect(responseJson.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog have age\", function () {\r",
							"    pm.expect(responseJson.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"//Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Name have Luky\", function () {\r",
							"    pm.expect(responseJson.family.pets.dog.name).to.eql(\"Luky\");\r",
							" });\r",
							"//Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Age have 4\", function () {\r",
							"    pm.expect(responseJson.family.pets.dog.age).to.eql(4);\r",
							" });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Andrei&age=salary&salary=300",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrei"
						},
						{
							"key": "age",
							"value": "salary"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"var responseJson = pm.response.json();\r",
							"///Спарсить request.\r",
							"var req = pm.request.url.query.toObject();\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(responseJson.name).to.eql(req.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(+responseJson.age).to.eql(+req.age);\r",
							"});\r",
							"//Вывести в консоль параметр salary из request.\r",
							"console.log(req.salary);\r",
							"//Вывести в консоль параметр salary из response.\r",
							"console.log(responseJson.salary);\r",
							"//Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(responseJson.salary[0]);\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(responseJson.salary[1]);\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(responseJson.salary[2]);\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Salaru check 1\", function () {\r",
							"    pm.expect(+responseJson.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Salaru check 2\", function () {\r",
							"    pm.expect(+responseJson.salary[1]).to.eql((+req.salary)*2);\r",
							"});\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Salaru check 2\", function () {\r",
							"    pm.expect(+responseJson.salary[2]).to.eql((+req.salary)*3);\r",
							"});\r",
							"//Создать в окружении переменную name\r",
							"//Создать в окружении переменную age\r",
							"//Создать в окружении переменную salary\r",
							"//Передать в окружение ремённую переменную name\r",
							"pm.environment.set(\"name\", \"Andrei\")\r",
							"//Передать в окружение ремённую переменную age\r",
							"pm.environment.set(\"age\", \"27\")\r",
							"//Передать в окружение ремённую переменную salary\r",
							"pm.environment.set(\"salary\", \"300\")\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"console.log((responseJson.salary[0]),(responseJson.salary[1]),(responseJson.salary[2]));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Andrei&age=27&salary=300",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrei"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		}
	]
}